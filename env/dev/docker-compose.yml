version: "3.5"
services:
  postgres:
    image: postgres:10.4-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
  postgres-2:
    image: postgres:10.4-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 15432:5432

  zookeeper:
    image: zookeeper:3.4.14
    ports:
      - 2181:2181
  kafka:
    image: confluentinc/cp-kafka:5.5.2
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    depends_on:
      - zookeeper
#  schema-registry:
#    image: confluentinc/cp-schema-registry:5.5.2
#    ports:
#      - 8081:8081
#    environment:
#      SCHEMA_REGISTRY_HOST_NAME: schema-registry
#      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
#    depends_on:
#      - kafka
#  akhq:
#    image: tchiotludo/akhq
#    environment:
#      AKHQ_CONFIGURATION: |
#        akhq:
#          connections:
#            docker-kafka-server:
#              properties:
#                bootstrap.servers: "kafka:9092"
#              schema-registry:
#                url: "http://schema-registry:8081"
#    ports:
#      - 8087:8087
#    links:
#      - kafka
#      - schema-registry
